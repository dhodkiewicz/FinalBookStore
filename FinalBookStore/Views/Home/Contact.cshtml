@using FinalBookStore.Models.EntityFramework
@model FinalBookStore.Models.EntityFramework.Validation

@section Scripts{
    <script>
        function ShowSuccess(uData) {
            var target = $("#myForm");
            target.empty();

            if (uData) {
                target.append("<h3>Thanks for sharing your comments.. We are always looking to improve our Services!</h3>");
            } else {
                target.append("<h3>Received no data</h3>");
            }
        }
    </script>
}

@{
    ViewBag.Title = "Contact";
    List<SelectListItem> Branches = new List<SelectListItem>();
    Branches.Add(new SelectListItem() { Text = "Select Branch", Value = "" });
    foreach (BRANCH branch in ViewBag.branches)
    {
        Branches.Add(new SelectListItem()
        {
            Text = branch.BRANCH_NAME, Value = branch.BRANCH_NUM.ToString()
        });
    }
}
<h2>@ViewBag.Title</h2>

<div id ="myForm" class="container-fluid">
    @using (Ajax.BeginForm("Contact", "Home", new AjaxOptions
    {
        HttpMethod = "Post",
        InsertionMode = InsertionMode.Replace,
        LoadingElementId = "loading",
        LoadingElementDuration = 3000,
        OnSuccess = "ShowSuccess"
    }
        ))
    {
        <div class="row col-6 text-center">
            <form>
                <div class="form-inline">
                    <label>First Name</label>
                    @Html.TextBoxFor(x => x.Fname)
                </div>
                <div class="form-group lname">
                    <label>Last Name</label>
                    @Html.TextBoxFor(x => x.Lname)
                </div>
                <div class="form-group email">
                    <label>Email</label>
                    @Html.TextBoxFor(x => x.Uemail)
                </div>
                <div class="form-group conf_email">
                    <label>Confirm Email</label>
                    @Html.TextBoxFor(x => x.Uconfirmemail)
                </div>
                <div class="form-group conf_email">
                    <label>Branch</label>
                    @Html.DropDownList("Branch", Branches)
                </div>
                <div class="form-group comment">
                    <label>Leave a Comment</label>
                    @Html.TextAreaFor(x => x.Ucomment)
                </div>
                <button type="reset" class="btn btn-secondary">Clear</button>
                <button type="submit" class="btn btn-primary">Submit</button>

                <span class="help-block">
                    @Html.ValidationSummary(false) 
                </span>
            </form>
                </div>

    }
</div>
<div id ="loading" class="loading text-center">
    <h2>Sending....</h2>
</div>